//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
//   fxc /E PS /T ps_5_0 /Fo
//    E:\nnnEngine\nnnEngine\Nyan\nnnEngine\Nyan\Shaders\dx11.ps.hlslo
//    /Qstrip_reflect /Qstrip_debug
//    E:\nnnEngine\nnnEngine\Nyan\nnnEngine\Nyan\Shaders\dx11.ps.hlsl /Fc
//    E:\nnnEngine\nnnEngine\Nyan\nnnEngine\Nyan\Shaders\dx11.ps.txt
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float       
// POSITION                 0   xyz         1     NONE  float   xyz 
// TEXCOORD                 0   xy          2     NONE  float   xy  
// TEXCOORD                 1     zw        2     NONE  float     zw
// NORMAL                   0   xyz         3     NONE  float   xyz 
// BLENDINDICES             0   x           4     NONE    int   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Target                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.zw
dcl_input_ps linear v3.xyz
dcl_input_ps constant v4.x
dcl_output o0.xyzw
dcl_temps 2
and r0.xyzw, v4.xxxx, l(1, 2, 4, 8)
itof r0.xyzw, r0.yzwx
min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.xyzw, r0.yyzz, r0.wxwx
and r1.xyzw, v4.xxxx, l(16, 32, 64, 128)
itof r1.xyzw, r1.xyzw
min r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r0.xyzw, r0.xyzw, r1.xyzw
add r0.yw, -r0.xxxz, r0.yyyw
mad r0.xy, v2.wwww, r0.ywyy, r0.xzxx
add r0.y, -r0.x, r0.y
mad r0.x, v2.z, r0.y, r0.x
mad r0.x, -r0.x, l(0.300000), l(1.000000)
movc r0.x, v4.x, r0.x, l(1.000000)
add r0.yzw, -v1.xxyz, cb0[1].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.y, r1.x
sqrt r1.x, r1.x
add r1.x, -r1.x, cb0[1].w
div r1.x, r1.x, cb0[1].w
mul r0.yzw, r0.yyzw, r1.yyyy
dp3 r1.y, r0.yzwy, v3.xyzx
max r1.xy, r1.xyxx, l(0.000000, 0.100000, 0.000000, 0.000000)
mul r1.x, r1.x, r1.y
dp3 r1.y, v3.xyzx, v3.xyzx
ne r1.y, r1.y, l(0.000000)
movc r1.x, r1.y, r1.x, l(1.000000)
mul_sat r0.x, r0.x, r1.x
dp3 r1.x, cb0[0].xyzx, cb0[0].xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, cb0[0].xyzx
dp3 r0.y, r0.yzwy, r1.xyzx
max r0.y, r0.y, l(0.100000)
mul r0.y, r0.y, cb0[0].w
mul r0.y, r0.y, r0.y
min r0.y, r0.y, l(1.000000)
mul r0.x, r0.y, r0.x
mad r0.x, r0.x, l(0.750000), l(0.250000)
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v2.xyxx, t0.wxyz, s0
mul r0.xyz, r0.xxxx, r0.yzwy
add r1.xy, v2.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r1.xy, -|r1.xyxx|, l(0.500000, 0.500000, 0.000000, 0.000000)
min r0.w, r1.y, r1.x
lt r1.xy, l(0.020000, 0.020000, 0.000000, 0.000000), r1.xyxx
and r1.x, r1.y, r1.x
mul r0.w, r0.w, l(50.000000)
max r0.w, r0.w, l(0.500000)
movc r0.w, r1.x, l(1.000000), r0.w
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used
